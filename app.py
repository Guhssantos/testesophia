# -*- coding: utf-8 -*-
import streamlit as st
import google.generativeai as genai
import time

# --- Bloco 1: Configura√ß√£o da P√°gina ---
# (Sem altera√ß√µes - continua excelente!)
st.set_page_config(
    page_title="SophIA - Assistente Teol√≥gica", page_icon="üìñ", layout="centered", initial_sidebar_state="collapsed"
)

# --- Bloco 2: T√≠tulo e Descri√ß√£o ---
# (Sem altera√ß√µes - claro e direto!)
st.title("üìñ SophIA: Sua Assistente Teol√≥gica")
st.caption("Um espa√ßo para explorar a f√© crist√£ sob a perspectiva da Assembleia de Deus.")
st.divider()

# --- Bloco 3: Configura√ß√£o da API Key (MODIFICADO para Streamlit Cloud) ---
# (Sem altera√ß√µes - estrutura reutilizada e segura!)
try:
    GOOGLE_API_KEY_APP = st.secrets["GOOGLE_API_KEY"]
    genai.configure(api_key=GOOGLE_API_KEY_APP)
    api_key_configured_app = True
except KeyError:
    st.error("Ops! Parece que a Chave API do Google n√£o foi configurada nos 'Secrets' do Streamlit. Pe√ßa ajuda para configur√°-la nas defini√ß√µes do app.")
    st.stop()
except Exception as e:
    st.error(f"Erro inesperado ao configurar a API Key: {e}")
    st.stop()

# --- Bloco 4: Configura√ß√£o do Modelo Gemini ---
# (Sem altera√ß√µes - boas configura√ß√µes iniciais!)
generation_config = {
    "temperature": 0.7,
    "top_p": 1,
    "top_k": 1,
    "max_output_tokens": 2048,
}

safety_settings = [
    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
]

# --- Bloco 5: Instru√ß√£o do Sistema (Personalidade - SophIA) ---
# ***** MODIFICADO: Refinado e com exemplos (Few-Shot) *****
# ***** Idealmente, esta instru√ß√£o viria de um arquivo externo *****

def load_system_instruction():
    # Em um cen√°rio real, voc√™ leria de um arquivo:
    # with open("sophia_personality.txt", "r", encoding="utf-8") as f:
    #     return f.read()
    # Por agora, vamos definir a string diretamente aqui:
    return """
Voc√™ √© SophIA, uma assistente virtual crist√£ projetada para oferecer suporte teol√≥gico e espiritual, guiada pelos princ√≠pios da Assembleia de Deus no Brasil. Sua fun√ß√£o √© atuar como uma guia confi√°vel e informada, refletindo a sabedoria encontrada na B√≠blia Sagrada e alinhando-se √† doutrina pentecostal.

Sua comunica√ß√£o deve ser:
*   Clara e paciente, garantindo que todos compreendam a mensagem.
*   Baseada firmemente na Palavra de Deus (priorizando a vers√£o Almeida Revista e Corrigida - ARC), com cita√ß√µes b√≠blicas relevantes.
*   Edificadora e inspiradora, enfatizando f√©, amor e a mensagem de Jesus Cristo.
*   Respeitosa, emp√°tica e acolhedora. Jamais critique, julgue ou menospreze o usu√°rio ou outras cren√ßas.

Instru√ß√µes Fundamentais:
1.  **Fundamento B√≠blico Mandat√≥rio:** TODA resposta teol√≥gica DEVE ser baseada na B√≠blia Sagrada (priorizando a ARC). Cite vers√≠culos pertinentes. Ader√™ncia estrita √† doutrina pentecostal da Assembleia de Deus √© crucial.
2.  **Fidelidade Doutrin√°ria:** Explique os princ√≠pios da Assembleia de Deus de forma clara e acess√≠vel. Simplifique conceitos complexos sem distorcer o significado. Se um tema for controverso ou tiver m√∫ltiplas interpreta√ß√µes aceitas dentro da AD, apresente-as com equil√≠brio, indicando a vis√£o predominante, se houver.
3.  **Estilo de Resposta:** Seja objetiva e bem estruturada. Conclua com uma mensagem apropriada de f√©, esperan√ßa ou encorajamento baseado nos princ√≠pios b√≠blicos.
4.  **N√£o Aconselhamento Pessoal Direto:** N√ÉO forne√ßa aconselhamento para problemas pessoais (financeiros, relacionais, sa√∫de mental, etc.). Ofere√ßa princ√≠pios b√≠blicos gerais e incentive fortemente a busca por orienta√ß√£o pastoral local ou profissional qualificado quando apropriado.
5.  **Reconhecimento de Limites:** Se uma pergunta for excessivamente complexa, fora do escopo teol√≥gico definido, ou se a resposta n√£o for claramente estabelecida nas Escrituras ou doutrina da AD, admita a limita√ß√£o com humildade. EVITE ESPECULA√á√ïES. Sugira gentilmente que o usu√°rio consulte um pastor ou l√≠der espiritual experiente.
6.  **Evitar Debate Improdutivo:** N√£o entre em debates teol√≥gicos prolongados ou controversos que n√£o sejam produtivos para o crescimento espiritual. Mantenha o foco na edifica√ß√£o.

Exemplos de Intera√ß√£o (Few-Shot Learning):

Exemplo 1:
Usu√°rio: O que √© o batismo no Esp√≠rito Santo segundo a Assembleia de Deus?
SophIA: Ol√°! Segundo a doutrina pentecostal da Assembleia de Deus, o batismo no Esp√≠rito Santo √© uma b√™n√ß√£o maravilhosa e um revestimento de poder do alto, que ocorre ap√≥s a salva√ß√£o. Ele √© evidenciado inicialmente pelo falar em novas l√≠nguas, conforme vemos em Atos 2:4 (ARC): "E todos foram cheios do Esp√≠rito Santo e come√ßaram a falar em outras l√≠nguas, conforme o Esp√≠rito Santo lhes concedia que falassem." Este batismo capacita o crente para um servi√ßo crist√£o mais eficaz e um testemunho poderoso. √â uma promessa para todos os que creem, como Pedro declarou em Atos 2:38-39. Que a busca por essa experi√™ncia divina encha seu cora√ß√£o de f√© e expectativa!

Exemplo 2:
Usu√°rio: Estou me sentindo muito ansioso ultimamente. O que a B√≠blia diz?
SophIA: Compreendo que momentos de ansiedade podem ser dif√≠ceis. A Palavra de Deus nos oferece grande conforto e dire√ß√£o. Em Filipenses 4:6-7 (ARC), o ap√≥stolo Paulo nos orienta: "N√£o estejais inquietos por coisa alguma; antes, as vossas peti√ß√µes sejam em tudo conhecidas diante de Deus, pela ora√ß√£o e s√∫plicas, com a√ß√£o de gra√ßas. E a paz de Deus, que excede todo o entendimento, guardar√° os vossos cora√ß√µes e os vossos sentimentos em Cristo Jesus." Lembre-se de entregar suas preocupa√ß√µes a Deus em ora√ß√£o. Se essa ansiedade persistir ou se tornar muito intensa, √© muito importante buscar apoio em seu pastor e, se necess√°rio, em um profissional de sa√∫de. Deus deseja lhe dar paz. Confie Nele!

Exemplo 3 (Pergunta fora do escopo):
Usu√°rio: Qual a melhor forma de investir meu dinheiro?
SophIA: Entendo sua preocupa√ß√£o com a boa administra√ß√£o dos recursos. A B√≠blia nos ensina princ√≠pios de sabedoria financeira, como a honestidade (Prov√©rbios 16:8 ARC) e a dilig√™ncia (Prov√©rbios 21:5 ARC). No entanto, como assistente teol√≥gica, n√£o posso oferecer aconselhamento financeiro espec√≠fico. Para decis√µes de investimento, recomendo que voc√™ busque orienta√ß√£o de um profissional da √°rea financeira qualificado. E claro, sempre ore a Deus pedindo sabedoria em todas as suas decis√µes!
"""
system_instruction = load_system_instruction()

# --- Bloco 6: Defini√ß√µes de Seguran√ßa (CVV) ---
# (Sem altera√ß√µes - ESSENCIAL manter esta seguran√ßa!)
keywords_risco = [ "me matar", "me mate", "suicidio", "suic√≠dio", "n√£o aguento mais viver", "quero morrer", "queria morrer", "quero sumir", "desistir de tudo", "acabar com tudo", "fazer mal a mim", "me cortar", "me machucar", "automutila√ß√£o" ]
resposta_risco_padrao = ( "Sinto muito que voc√™ esteja passando por um momento t√£o dif√≠cil e pensando nisso. √â muito importante buscar ajuda profissional agora. Por favor, entre em contato com o CVV (Centro de Valoriza√ß√£o da Vida) ligando para o n√∫mero 188. A liga√ß√£o √© gratuita e eles est√£o dispon√≠veis 24 horas por dia para conversar com voc√™ de forma sigilosa. Voc√™ n√£o est√° sozinho(a) e h√° pessoas prontas para te ouvir." )

# --- Bloco 7: Fun√ß√£o para Inicializar o Modelo ---
# (Cache do modelo √© uma √≥tima pr√°tica!)
@st.cache_resource
def init_model():
    try:
        model = genai.GenerativeModel(
            "Gemini 2.0 Flash-Lite",
            generation_config=generation_config,
            safety_settings=safety_settings,
            system_instruction=system_instruction # A personalidade refinada da SophIA √© passada aqui
        )
        return model
    except Exception as e:
        st.error(f"Erro grave ao carregar o modelo de IA: {e}. Verifique a configura√ß√£o da API Key e as instru√ß√µes do sistema.")
        st.stop()
model = init_model()

# --- Bloco 8: Gerenciamento do Hist√≥rico e Sugest√µes Iniciais ---
# ***** MODIFICADO: Adicionadas sugest√µes de t√≥picos *****
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "assistant", "content": "Ol√°! Sou SophIA. Em que posso ajud√°-lo hoje com base na Palavra de Deus e nos ensinamentos da Assembleia de Deus?"}]

if "chat_session" not in st.session_state:
    # Inicializa a sess√£o de chat com o Gemini. O hist√≥rico inicial est√° vazio
    # porque a `system_instruction` j√° configura a personalidade e contexto inicial do modelo.
    # As mensagens em `st.session_state.messages` s√£o para exibi√ß√£o na UI e para reconstruir o chat se necess√°rio.
    st.session_state.chat_session = model.start_chat(history=[])


# Exibe sugest√µes de t√≥picos apenas se for o in√≠cio da conversa (apenas a mensagem de boas-vindas da SophIA)
if len(st.session_state.messages) <= 1:
    st.markdown("##### Sugest√µes de temas para explorar:")
    cols = st.columns(3)
    sugestoes = {
        "O que √© a Salva√ß√£o?": "O que √© a Salva√ß√£o pela gra√ßa mediante a f√©?",
        "A B√≠blia √© inspirada?": "Como a Assembleia de Deus v√™ a inspira√ß√£o da B√≠blia?",
        "Quem √© Jesus Cristo?": "Fale sobre a divindade e humanidade de Jesus Cristo."
    }
    button_keys = ["sugestao1", "sugestao2", "sugestao3"] # Chaves √∫nicas para os bot√µes
    
    for i, (texto_botao, pergunta_real) in enumerate(sugestoes.items()):
        if cols[i].button(texto_botao, key=button_keys[i]):
            # Adiciona a pergunta ao hist√≥rico como se o usu√°rio tivesse digitado
            st.session_state.messages.append({"role": "user", "content": pergunta_real})
            # Adiciona a pergunta ao hist√≥rico do chat da API Gemini tamb√©m
            # (Importante para manter o contexto da API Gemini sincronizado)
            # No entanto, o envio real da mensagem ocorrer√° no Bloco 10
            # Aqui apenas preparamos a UI para o pr√≥ximo ciclo de processamento
            st.rerun() # Reinicia o script para processar o novo input imediatamente

# --- Bloco 9: Exibi√ß√£o do Hist√≥rico ---
# ***** MODIFICADO: Adicionados bot√µes de feedback (visuais por enquanto) *****
for idx, message in enumerate(st.session_state.messages):
    with st.chat_message(message["role"]):
        st.markdown(message["content"])
        if message["role"] == "assistant" and message["content"] != st.session_state.messages[0]["content"] and message["content"] != resposta_risco_padrao: # N√£o mostrar feedback na msg de boas vindas ou de risco
            feedback_key_base = f"feedback_{idx}"
            col1, col2, col_spacer = st.columns([1,1,8]) # Ajuste as propor√ß√µes conforme necess√°rio
            if col1.button("üëç", key=f"{feedback_key_base}_up", help="Gostei da resposta!"):
                st.toast("Obrigado pelo seu feedback!", icon="üòä")
                # Aqui voc√™ poderia adicionar l√≥gica para registrar o feedback positivo
            if col2.button("üëé", key=f"{feedback_key_base}_down", help="N√£o gostei da resposta."):
                st.toast("Lamento por isso. Seu feedback nos ajuda a melhorar.", icon="üòï")
                # Aqui voc√™ poderia adicionar l√≥gica para registrar o feedback negativo

# --- Bloco 10: Input e L√≥gica Principal ---
# ***** MODIFICADO: Tratamento de erro da API Gemini e placeholder para RAG *****
if prompt := st.chat_input("Digite sua d√∫vida ou reflex√£o..."):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    prompt_lower = prompt.lower()
    contem_risco = any(keyword in prompt_lower for keyword in keywords_risco)

    if contem_risco:
        with st.chat_message("assistant"):
            st.warning("Importante: Se voc√™ est√° passando por pensamentos dif√≠ceis ou de risco, por favor, busque ajuda profissional imediatamente.")
            st.markdown(resposta_risco_padrao)
        st.session_state.messages.append({"role": "assistant", "content": resposta_risco_padrao})
    else:
        # --- PONTO DE PARTIDA PARA RAG (Retrieval Augmented Generation) ---
        # Em um sistema RAG completo, voc√™ faria o seguinte ANTES de enviar para o Gemini:
        # 1. (Pr√©-processamento √∫nico): Carregar seu corpus de conhecimento (B√≠blia ARC, manuais da AD).
        #    Dividir em chunks, gerar embeddings e armazenar em um banco vetorial (FAISS, ChromaDB).
        # 2. (Para cada pergunta do usu√°rio):
        #    query_embedding = gerar_embedding(prompt)
        #    relevant_docs = buscar_no_banco_vetorial(query_embedding, top_k=3)
        #    contexto_adicional = " ".join([doc.content for doc in relevant_docs])
        #
        #    prompt_para_gemini = f"""Com base nos seguintes trechos da doutrina da Assembleia de Deus e da B√≠blia ARC:
        #    --- IN√çCIO DO CONTEXTO ---
        #    {contexto_adicional}
        #    --- FIM DO CONTEXTO ---
        #    Responda √† seguinte pergunta do usu√°rio, utilizando o contexto fornecido como principal fonte de verdade,
        #    mantendo a personalidade de SophIA e seguindo todas as suas instru√ß√µes:
        #    Pergunta: {prompt}
        #    """
        # Neste exemplo, vamos prosseguir sem o RAG completo, mas √© aqui que ele se encaixaria.
        # A `system_instruction` j√° ajuda muito, mas o RAG traria ainda mais precis√£o.
        # --------------------------------------------------------------------
        
        try:
            with st.spinner("SophIA est√° processando... üìñ"):
                # O hist√≥rico do chat j√° est√° sendo gerenciado pela API atrav√©s de `start_chat` e `send_message`
                # N√£o precisamos enviar o hist√≥rico completo a cada vez para `send_message` se a sess√£o de chat for mantida.
                response = st.session_state.chat_session.send_message(prompt) # Usamos a sess√£o de chat existente

            # Verificar se a resposta foi bloqueada por filtros de seguran√ßa da API
            if response.prompt_feedback and response.prompt_feedback.block_reason:
                block_reason = response.prompt_feedback.block_reason
                error_msg_user = f"Sua mensagem n√£o p√¥de ser processada devido a restri√ß√µes de conte√∫do ({block_reason}). Por favor, reformule sua pergunta ou tente um tema diferente."
                st.error(error_msg_user)
                st.session_state.messages.append({"role": "assistant", "content": f"Sua mensagem foi bloqueada por nossas pol√≠ticas de seguran√ßa ({block_reason}). Por favor, tente reformular."})
            else:
                bot_response = response.text
                st.session_state.messages.append({"role": "assistant", "content": bot_response})
                with st.chat_message("assistant"):
                    message_placeholder = st.empty()
                    full_response = ""
                    for chunk in bot_response.split():
                        full_response += chunk + " "
                        time.sleep(0.05)
                        message_placeholder.markdown(full_response + "‚ñå")
                    message_placeholder.markdown(full_response)

        except genai.types.generation_types.BlockedPromptException as bpe: # Erro espec√≠fico de prompt bloqueado
            error_msg_user = "Sua mensagem foi bloqueada por nossas pol√≠ticas de seguran√ßa. Por favor, reformule sua pergunta ou tente um tema diferente."
            st.error(error_msg_user)
            st.session_state.messages.append({"role": "assistant", "content": error_msg_user})
            print(f"ERRO DEBUG App: Prompt Bloqueado pela API - {bpe}")
        except Exception as e:
            error_msg_user = "Desculpe, ocorreu um problema t√©cnico ao processar sua mensagem. Tente novamente mais tarde. Se o erro persistir, pode ser uma falha tempor√°ria na conex√£o com a IA."
            st.error(error_msg_user)
            error_response_log = f"Sinto muito, tive um problema t√©cnico interno: {str(e)}. Por favor, tente novamente. üòî"
            st.session_state.messages.append({"role": "assistant", "content": error_response_log})
            print(f"ERRO DEBUG App: Falha ao enviar mensagem para Gemini - {e}")

# --- Bloco 11: Rodap√© ---
# (Sem altera√ß√µes - informativo!)
st.divider()
st.caption("SophIA (v2.0) √© uma ferramenta de IA para apoio teol√≥gico e espiritual. Lembre-se que a IA √© um aux√≠lio e n√£o substitui o estudo pessoal da Palavra, a ora√ß√£o e o conselho pastoral.")
