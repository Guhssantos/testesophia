# -*- coding: utf-8 -*-
import streamlit as st
import google.generativeai as genai
import time

# --- Bloco 1: Configura√ß√£o da P√°gina ---
# Atualizado para SophIA
st.set_page_config(
    page_title="SophIA - Assistente Teol√≥gica", page_icon="üìñ", layout="centered", initial_sidebar_state="collapsed"
)

# --- Bloco 2: T√≠tulo e Descri√ß√£o ---
# Atualizado para SophIA
st.title("üìñ SophIA: Sua Assistente Teol√≥gica")
st.caption("Um espa√ßo para explorar a f√© crist√£ sob a perspectiva da Assembleia de Deus.")
st.divider()

# --- Bloco 3: Configura√ß√£o da API Key (MODIFICADO para Streamlit Cloud) ---
# (Sem altera√ß√µes - estrutura reutilizada)
try:
    # O nome 'GOOGLE_API_KEY' aqui deve ser EXATAMENTE o mesmo
    # que voc√™ usar√° nos segredos do Streamlit Cloud.
    GOOGLE_API_KEY_APP = st.secrets["GOOGLE_API_KEY"]
    genai.configure(api_key=GOOGLE_API_KEY_APP)
    api_key_configured_app = True
except KeyError:
    st.error("Ops! Parece que a Chave API do Google n√£o foi configurada nos 'Secrets' do Streamlit. Pe√ßa ajuda para configur√°-la nas defini√ß√µes do app.")
    st.stop()
except Exception as e:
    st.error(f"Erro inesperado ao configurar a API Key: {e}")
    st.stop()

# --- Bloco 4: Configura√ß√£o do Modelo Gemini ---
# (Sem altera√ß√µes - estrutura reutilizada)
generation_config = {
    "temperature": 0.7, # Ajuste para mais criatividade vs. mais factualidade
    "top_p": 1,
    "top_k": 1,
    "max_output_tokens": 2048, # Ajuste conforme necess√°rio
}

safety_settings = [ # Ajuste os n√≠veis de seguran√ßa conforme o caso de uso
    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_MEDIUM_AND_ABOVE"},
]
# --- Bloco 5: Instru√ß√£o do Sistema (Personalidade - SophIA) ---
# ***** ESTA √â A PRINCIPAL MODIFICA√á√ÉO *****
system_instruction = """
Voc√™ √© SophIA, uma assistente virtual crist√£ projetada para oferecer suporte teol√≥gico e espiritual, guiada pelos princ√≠pios da Assembleia de Deus no Brasil. Sua fun√ß√£o √© atuar como uma guia confi√°vel e informada, refletindo a sabedoria encontrada na B√≠blia Sagrada e alinhando-se √† doutrina pentecostal. Sua comunica√ß√£o deve ser: Clara e paciente, garantindo que todos compreendam a mensagem. Baseada firmemente na Palavra de Deus (priorizando a vers√£o Almeida Revista e Corrigida - ARC), com cita√ß√µes b√≠blicas relevantes. Edificadora e inspiradora, enfatizando f√©, amor e a mensagem de Jesus Cristo. Evite especula√ß√µes teol√≥gicas que n√£o estejam claramente fundamentadas nas Escrituras e mantenha suas respostas estritamente dentro do ensino tradicional da Assembleia de Deus, promovendo sempre a edifica√ß√£o espiritual dos usu√°rios.

Instru√ß√µes:
1.  **Fundamento B√≠blico:** Sempre baseie as respostas na B√≠blia Sagrada (priorizando a ARC), citando vers√≠culos pertinentes e seguindo fielmente a doutrina pentecostal da Assembleia de Deus.
2.  **Comunica√ß√£o Clara e Acolhedora:** Use um tom respeitoso, paciente, emp√°tico e edificante. Jamais critique, julgue ou menospreze o usu√°rio ou outras cren√ßas.
3.  **Fidelidade Doutrin√°ria:** Explique os princ√≠pios e doutrinas da Assembleia de Deus de forma clara e acess√≠vel, simplificando conceitos teol√≥gicos complexos sem distorcer seu significado original.
4.  **Resolu√ß√£o de D√∫vidas:** Ao responder d√∫vidas, apresente a posi√ß√£o doutrin√°ria estabelecida pela Assembleia de Deus. Evite entrar em debates teol√≥gicos prolongados ou controversos que n√£o sejam produtivos para o crescimento espiritual.
5.  **Estilo de Resposta:** Seja objetiva e bem estruturada em suas respostas. Conclua com uma mensagem apropriada de f√©, esperan√ßa ou encorajamento baseado nos princ√≠pios b√≠blicos.
6.  **N√£o Aconselhamento Pessoal:** N√£o forne√ßa aconselhamento direto para problemas pessoais (financeiros, relacionais, sa√∫de mental, etc.). Em vez disso, ofere√ßa princ√≠pios b√≠blicos relevantes e incentive a busca por orienta√ß√£o pastoral ou profissional quando apropriado.
7.  **Reconhecimento de Limites:** Se uma pergunta for excessivamente complexa, fora do escopo teol√≥gico definido, ou se a resposta n√£o for claramente estabelecida, admita a limita√ß√£o com humildade e evite especula√ß√µes. Sugira gentilmente que o usu√°rio consulte um pastor ou l√≠der espiritual.
"""

# --- Bloco 6: Defini√ß√µes de Seguran√ßa (CVV) ---
# (Sem altera√ß√µes - ESSENCIAL manter esta seguran√ßa)
keywords_risco = [ "me matar", "me mate", "suicidio", "suic√≠dio", "n√£o aguento mais viver", "quero morrer", "queria morrer", "quero sumir", "desistir de tudo", "acabar com tudo", "fazer mal a mim", "me cortar", "me machucar", "automutila√ß√£o" ]
resposta_risco_padrao = ( "Sinto muito que voc√™ esteja passando por um momento t√£o dif√≠cil e pensando nisso. √â muito importante buscar ajuda profissional agora. Por favor, entre em contato com o CVV (Centro de Valoriza√ß√£o da Vida) ligando para o n√∫mero 188. A liga√ß√£o √© gratuita e eles est√£o dispon√≠veis 24 horas por dia para conversar com voc√™ de forma sigilosa. Voc√™ n√£o est√° sozinho(a) e h√° pessoas prontas para te ouvir." )

# --- Bloco 7: Fun√ß√£o para Inicializar o Modelo ---
# (Sem altera√ß√µes - estrutura reutilizada)
@st.cache_resource # Guarda o modelo na mem√≥ria para n√£o recarregar toda hora
def init_model():
    try:
        model = genai.GenerativeModel(
            "gemini-1.5-pro-latest", # Modelo do Gemini
            generation_config=generation_config,
            safety_settings=safety_settings,
            system_instruction=system_instruction # Passa a personalidade da SophIA aqui
        )
        return model
    except Exception as e:
        st.error(f"Erro grave ao carregar o modelo de IA: {e}")
        st.stop()
model = init_model()

# --- Bloco 8: Gerenciamento do Hist√≥rico da Conversa ---
# (Estrutura reutilizada, mensagem inicial atualizada)
if "messages" not in st.session_state:
    # Mensagem inicial da SophIA
    st.session_state.messages = [{"role": "assistant", "content": "Ol√°! Sou SophIA. Em que posso ajud√°-lo hoje com base na Palavra de Deus e nos ensinamentos da Assembleia de Deus?"}]
# Inicia a sess√£o de chat com o Gemini se n√£o existir
if "chat_session" not in st.session_state:
    st.session_state.chat_session = model.start_chat(history=[]) # Hist√≥rico inicial vazio, pois a personalidade j√° est√° no modelo

# --- Bloco 9: Exibi√ß√£o do Hist√≥rico ---
# (Sem altera√ß√µes - estrutura reutilizada)
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# --- Bloco 10: Input e L√≥gica Principal ---
# (Estrutura reutilizada, texto do spinner atualizado)
if prompt := st.chat_input("Digite sua d√∫vida ou reflex√£o..."):
    # Adiciona a mensagem do usu√°rio ao hist√≥rico e mostra na tela
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # Verifica se a mensagem cont√©m palavras de risco (ESSENCIAL manter)
    prompt_lower = prompt.lower() # Converte para min√∫sculas para facilitar a busca
    contem_risco = any(keyword in prompt_lower for keyword in keywords_risco)

    if contem_risco:
        # Se cont√©m risco, mostra a mensagem do CVV e N√ÉO envia para a IA
        with st.chat_message("assistant"):
            st.warning("Importante: Se voc√™ est√° passando por pensamentos dif√≠ceis ou de risco, por favor, busque ajuda profissional imediatamente.")
            st.markdown(resposta_risco_padrao)
        # Adiciona a resposta de risco ao hist√≥rico
        st.session_state.messages.append({"role": "assistant", "content": resposta_risco_padrao})
    else:
        # Se N√ÉO cont√©m risco, envia para a IA processar
        try:
            # Texto do spinner atualizado para SophIA
            with st.spinner("SophIA est√° processando... üìñ"):
                response = st.session_state.chat_session.send_message(prompt)
            bot_response = response.text
            # Adiciona a resposta da IA ao hist√≥rico e mostra na tela
            st.session_state.messages.append({"role": "assistant", "content": bot_response})
            with st.chat_message("assistant"):
                # Efeito de digita√ß√£o para a resposta da IA
                message_placeholder = st.empty()
                full_response = ""
                for chunk in bot_response.split():
                    full_response += chunk + " "
                    time.sleep(0.05) # Pequena pausa para simular digita√ß√£o
                    message_placeholder.markdown(full_response + "‚ñå") # Mostra o cursor piscando
                message_placeholder.markdown(full_response) # Mostra a resposta completa

        except Exception as e:
            # Se der erro ao falar com a IA
            error_msg_user = f"Desculpe, ocorreu um problema t√©cnico ao processar sua mensagem. Tente novamente mais tarde."
            st.error(error_msg_user)
            # Adiciona uma mensagem de erro gen√©rica ao hist√≥rico
            error_response = "Sinto muito, tive um problema t√©cnico interno. Por favor, tente novamente. üòî"
            st.session_state.messages.append({"role": "assistant", "content": error_response})
            print(f"ERRO DEBUG App: Falha Gemini - {e}") # Log t√©cnico (n√£o vis√≠vel ao usu√°rio)

# --- Bloco 11: Rodap√© ---
# Atualizado para SophIA
st.divider()
st.caption("SophIA √© uma ferramenta de IA para apoio teol√≥gico e espiritual.")

# --- Fim do app.py ---
